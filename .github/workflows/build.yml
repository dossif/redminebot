name: Build
on:
  push:
    tags:
      - 'v*.*.*'
env:
  APP: redminebot
  OS: linux
  ARCH: amd64
  CGO_ENABLED: 0
  DH_ROOT: dossif
jobs:
  Test:
    runs-on: ubuntu-20.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Run unit tests
        run: go test -cover ./src/*
  Compile:
    needs: Test
    runs-on: ubuntu-20.04
    steps:
      - name: Get release version from git tag
        run: echo "VER=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Compile binary
        run: GOOS=${OS} GOARCH=${ARCH} go build -trimpath -ldflags "-X main.AppVersion=${VER}" -o "${APP}" ./src/main
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binary
          path: ./${{ env.APP }}
  Dockerimage:
    needs: Compile
    runs-on: ubuntu-20.04
    steps:
      - name: Get release version from git tag
        run: echo "VER=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: binary
          path: .
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DH_ROOT }}/${{ env.APP }}:${{ env.VER }}
  Release:
    needs: Compile
    runs-on: ubuntu-20.04
    steps:
      - name: Get release version from git tag
        run: echo "VER=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: binary
          path: .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: "v${{ env.VER }}"
          tag_name: "v${{ env.VER }}"
          files: ./${{ env.APP }}
